forming cluster using kubeadm method:
------------------------------------
commands run in both master and worker nodes:
---------------------------------------------

1. sudo apt-get update
2.curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
3.echo   "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
4.cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

5.sudo systemctl enable docker
6.sudo systemctl daemon-reload
7.sudo systemctl restart docker
8.sudo apt-get update
9. sudo apt-get install -y apt-transport-https ca-certificates curl
10.sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
11.echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
12.sudo apt-get update
13.sudo apt-get install -y kubelet kubeadm kubectl
14.sudo apt-mark hold kubelet kubeadm kubectl

Run commands only in master:
---------------------------
1. sudo kubeadm init --pod-network-cidr 10.0.0.0/16
2. mkdir -p $HOME/.kube
   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   sudo chown $(id -u):$(id -g) $HOME/.kube/config
3.kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
